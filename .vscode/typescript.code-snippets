{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"EntryTemplate": {
		"prefix": "entry",
		"body": [
			"import { entryForFile } from \"../../../entry\";",
			"",
			"export const ${1:entry} = entryForFile(",
			"    async ({ lines, outputCallback }) => {",
			"        throw Error(\"Not implemented\");",
			"    },",
			"    async ({ lines, outputCallback }) => {",
			"        throw Error(\"Not implemented\");",
			"    },",
			"    { key: \"${2:key}\", title: \"${3:title}\"}",
			");"
		],
		"description": "Basic template for an entry",
		"scope": "typescript"
	},
	"VisualizerTemplate": {
		"prefix": "visualizer",
		"body": [
			"import { Pause, ScreenBuilder, ScreenPrinter } from '../../../entry';",
			"",
			"export interface I${1:Visualizer} {",
			"",
			"}",
			"",
			"export const buildVisualizer = (screenBuilder: ScreenBuilder | undefined, pause: Pause) => {",
			"    if (screenBuilder) {",
			"        return new RealVisualizer(screenBuilder, pause);",
			"    } else {",
			"        return new DummyVisualizer();",
			"    }",
			"}",
			"",
			"class RealVisualizer implements I${1} {",
			"    private printer!: ScreenPrinter;",
			"    constructor(",
			"        private readonly screenBuilder: ScreenBuilder,",
			"        private readonly pause: Pause",
			"    ) { ",
			"    }",
			"}",
			"",
			"class DummyVisualizer implements I${1} {",
			"",
			"}",
		],
		"description": "Basic template for an entry",
		"scope": "typescript"
	},
	"EntryListTemplate": {
		"prefix": "elist",
		"body": [
			"{",
			"    name: \"${1:name}\",",
			"    title: \"${2:title}\",",
			"    entry: ${3:entry}",
			"}"
		]
	}

}